$date
	Wed Oct 21 14:34:03 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module adder_4bit_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 1 + c0 $end
$scope module adder0 $end
$var wire 1 , a $end
$var wire 1 - ab $end
$var wire 1 . axorb $end
$var wire 1 / b $end
$var wire 1 % cin $end
$var wire 1 0 cin_axorb $end
$var wire 1 + cout $end
$var wire 1 1 s $end
$upscope $end
$scope module adder1 $end
$var wire 1 2 a $end
$var wire 1 3 ab $end
$var wire 1 4 axorb $end
$var wire 1 5 b $end
$var wire 1 + cin $end
$var wire 1 6 cin_axorb $end
$var wire 1 * cout $end
$var wire 1 7 s $end
$upscope $end
$scope module adder2 $end
$var wire 1 8 a $end
$var wire 1 9 ab $end
$var wire 1 : axorb $end
$var wire 1 ; b $end
$var wire 1 * cin $end
$var wire 1 < cin_axorb $end
$var wire 1 ) cout $end
$var wire 1 = s $end
$upscope $end
$scope module adder3 $end
$var wire 1 > a $end
$var wire 1 ? ab $end
$var wire 1 @ axorb $end
$var wire 1 A b $end
$var wire 1 ) cin $end
$var wire 1 B cin_axorb $end
$var wire 1 " cout $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#1000
0/
05
0;
0A
0,
02
08
0>
0%
b0 $
b0 '
b0 #
b0 &
#1010
0.
0-
04
03
0:
09
0@
0?
00
#1020
bx0 !
bx0 (
01
06
0<
0B
0+
#1030
0*
0)
0"
bx00 !
bx00 (
07
#1040
0=
b0 !
b0 (
0C
#2000
1,
b1 #
b1 &
#2010
1.
#2020
b1 !
b1 (
11
#3000
1/
0,
b1 $
b1 '
b0 #
b0 &
#4000
0/
1%
b0 $
b0 '
#4010
0.
b0 !
b0 (
01
10
#4020
b1 !
b1 (
11
00
1+
#4030
0+
b11 !
b11 (
17
#4040
b1 !
b1 (
07
#5000
1/
1,
0%
b1 $
b1 '
b1 #
b1 &
#5010
1-
b0 !
b0 (
01
#5020
1+
#5030
b10 !
b10 (
17
#6000
0/
0,
12
b0 $
b0 '
b10 #
b10 &
#6010
0-
14
#6020
0+
b0 !
b0 (
07
16
#6030
b10 !
b10 (
17
06
1*
#6040
0*
b110 !
b110 (
1=
#6050
b10 !
b10 (
0=
#7000
15
02
b10 $
b10 '
b0 #
b0 &
#8000
05
18
b0 $
b0 '
b100 #
b100 &
#8010
04
1:
#8020
07
b100 !
b100 (
1=
#9000
1;
08
b100 $
b100 '
b0 #
b0 &
#10000
0;
1>
b0 $
b0 '
b1000 #
b1000 &
#10010
0:
1@
#10020
0=
b1000 !
b1000 (
1C
#11000
1A
0>
b1000 $
b1000 '
b0 #
b0 &
#12000
15
0A
12
b10 $
b10 '
b10 #
b10 &
#12010
0@
13
#12020
b0 !
b0 (
0C
1*
#12030
b100 !
b100 (
1=
#13000
05
1;
02
18
b100 $
b100 '
b100 #
b100 &
#13010
03
19
#13020
0*
1)
#13030
0=
b1000 !
b1000 (
1C
#14000
0;
1A
08
1>
b1000 $
b1000 '
b1000 #
b1000 &
#14010
09
1?
#14020
0)
1"
#14030
b0 !
b0 (
0C
#15000
0A
0>
b0 $
b0 '
b0 #
b0 &
#15010
0?
#15020
0"
#16000
1/
15
1;
1A
1,
12
18
1>
1%
b1111 $
b1111 '
b1111 #
b1111 &
#16010
1-
13
19
1?
b1 !
b1 (
11
#16020
1+
1*
1)
1"
#16030
17
1=
b1111 !
b1111 (
1C
#17000
